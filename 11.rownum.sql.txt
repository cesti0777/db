--11.rownum.sql

-- *** rownum
-- oracle 자체적으로 제공하는 컬럼
-- order by 절 적용 가능
-- table 당 무조건 자동 생성
-- insert하는 데이터에 자동으로 부여, 증가치가 1씩 증가
-- 검색시 검색된 데이터 순서대로 rownum값 자동 반영(1부터 시작)

-- *** 인라인 뷰
	-- 검색시 빈번히 활용되는 스펙
	-- 서브쿼리의 일종으로 from절에 위치하여 결과값이 마치 새로운
	   테이블처럼 생성되어 사용되는것 처럼 간주
	-- view처럼 가상 table과 같은 개념
	-- 원리 : sql문 내부에 view를 정의하고 이를 테이블처럼 사용 

select rownum, empno from emp;
select rownum, deptno from dept;
-- 검색된 순으로 rownum값이 1부터 검색
select rownum, empno from emp where deptno = 10;

-- 1. emp  table의 입사일이 신입부터 5명의 사원만 검색 
-- 힌트 rownum 컬럼, view 도 사용해서 활용 
select rownum, hiredate 
from emp
order by hiredate asc;

select rownum, hiredate 
from emp
order by hiredate desc;

select rownum, hiredate 
from emp
order by rownum asc;

select rownum, hiredate 
from emp
order by rownum desc;

-- 인라인 뷰 형식의 쿼리문
select rownum, hiredate
from(
	select hiredate 
	from emp
	order by hiredate desc
)
where rownum <= 5;


-- 2. 인라인 뷰를 사용하여 급여를 많이 받는 순서대로 3명만 이름과 급여 검색  
-- 1단계 : 단순 ename, sal 확인
select ename, sal from emp;

-- 2단계 : sal로 내림차순 정렬
select ename, sal from emp order by sal desc;

-- 3단계 : 정렬 확인후 rownum값 확인후... 이대로는 안되는것도 확인 
--	   인라인 뷰로 지향
select rownum, ename, sla from emp order by sal desc;

--4단계 : 인라인뷰 반영후 개주ㅕㅡ 확인
select rownum, ename, sal
from(
	select ename, sal 
	from emp
	order by sal desc
);

--5단계 : rownum활용해서 검색 완료
select rownum, ename, sal
from(
	select ename, sal 
	from emp
	order by sal desc
)
where rownum <= 3;









